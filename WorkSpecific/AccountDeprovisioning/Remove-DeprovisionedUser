<#
.Synopsis
Deletes user accounts from Active Directory
.DESCRIPTION
Can receive input piped from Get-UserForDeprovisioning and deletes the Active Directory accounts received in the pipeline.
Two log files are created. (one success and one error) are saved to c:\
.PARAMETER DeprovisionedUser
The SamAccountName of a user.
.PARAMETER WhatIf
Performs a non-destructive operation.  No users will be deleted. You will only see which users *would* have been deleted had you run it without this switch.
.EXAMPLE
Remove-DeprovisionedUser BloggsF, GreenD

The above command deletes the two users BloggsF and GreenD from Active Directory.
.EXAMPLE
'BloggsF','GreenD' | Remove-DeprovisionedUser

The above command deletes the two users BloggsF and GreenD from Active Directory.
.EXAMPLE
Get-UserForDeProvisioning -UserType Staff -DaysExpired 360 | select -first 5 | Remove-DeprovisionedUser -WhatIf

The above command will perform a "whatif" operation on the first 5 accounts received in the pipeline from 'Get-UserForDeProvisioning'.  No actual deletions will take place.
.EXAMPLE
Get-UserForDeProvisioning -UserType Staff -DaysExpired 360 | select -first 5 | Remove-DeprovisionedUser

The above command will delete the first 5 accounts received in the pipeline from 'Get-UserForDeProvisioning'.
.INPUTS
You can pipe the output of Get-UserForDeprovisioning to this function.
.OUTPUTS
None
.NOTES
Version: 1.3
Date: 13 May 2015
Created By: OH
.LINK
http://www.fearthemonkey.co.uk
.LINK
https://github.com/ozthe2/Powershell.git
.LINK
Get-UserForDeprovisioning
Move-DeprovisionedHomeDirectories
#>

Function Remove-DeprovisionedUser {

    [CmdletBinding()]
        
    Param(              
        [PARAMETER(Mandatory=$false,
        ValueFromPipeline=$True,ValueFromPipelineByPropertyName=$true)]
        [Alias("SamAccountName")]                        
        [string[]]$DeprovisionedUser,      
        

        [PARAMETER(Mandatory=$False)]
        [Switch]$WhatIf
        )

    BEGIN {
        #Initialise log files
        write-output "Start Processing: $(get-date)" | Out-File "c:\Remove-DeprovisionedUser.log" -Encoding ascii -Append
        write-output "Start Processing: $(get-date)" | Out-File "c:\Remove-DeprovisionedUser.err" -Encoding ascii -Append

        $ErrorCount = 0
        $UsersProcessed = 0
   
    }#End BEGIN

    PROCESS {
        foreach ($User in $DeprovisionedUser) {    

            if ($whatif) {    
                Try {                
                    remove-aduser -Identity $User -WhatIf -ea Stop
                    $User | Out-File "c:\Remove-DeprovisionedUser.log" -Append -Encoding ascii
                    $UsersProcessed++  
                    $user              
                }Catch {
                    $user | Out-File "c:\Remove-DeprovisionedUser.err" -Append -Encoding ascii               
                    write-warning "Unable to delete $User from active directory."                     
                    $ErrorCount++
                }#end Try\Catch
            } else {
                #LIVE A.D DELETIONS!
                write-verbose "LIVE AD DELETIONS!"
                Try {
                    write-verbose "Deleting user: $User" 
                    remove-aduser -Identity $User -ea Stop -Confirm:$false
                    $usersprocessed++
                    $User | Out-File "c:\Remove-DeprovisionedUser.log" -Append -Encoding ascii
                    $user                    
                }Catch {
                    write-warning "Unable to delete $User from active directory."
                    $User  | Out-File "c:\Remove-DeprovisionedUser.err" -Append -Encoding ascii
                    $ErrorCount++
                }#end Try\Catch
            }#End else
       }#end foreach

    }#end PROCESS

    END {
        #Update log files
        if ($whatif) {write-output "MODE: WhatIf. No deletions have been made. (Would have deleted $UsersProcessed)" | Out-File "c:\Remove-DeprovisionedUser.log" -Encoding ascii -Append}                 
        
        if ($ErrorCount -eq 0) {            
            write-output "Finished Processing $UsersProcessed users. No reported errors." | Out-File "c:\Remove-DeprovisionedUser.err" -Encoding ascii -Append
        } else {
            write-output "Finished Processing: $ErrorCount errors encountered." | Out-File "c:\Remove-DeprovisionedUser.err" -Encoding ascii -Append
        }#end if
        
        "End Processing: $(get-date)" | Out-File "c:\Remove-DeprovisionedUser.log" -Encoding ascii -Append        
        "End Processing: $(get-date)" | Out-File "c:\Remove-DeprovisionedUser.err" -Encoding ascii -Append
        write-output "" | Out-File "c:\Remove-DeprovisionedUser.log" -Encoding ascii -Append
        write-output "" | Out-File "c:\Remove-DeprovisionedUser.err" -Encoding ascii -Append
    }#end END

}#end function
