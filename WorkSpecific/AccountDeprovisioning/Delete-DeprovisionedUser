<#
.Synopsis
Deletes user accounts from Active Directory
.DESCRIPTION
Receives input piped from Get-UserForDeprovisioning and deletes the Active Directory accounts received in the pipeline.
Two log files (one success and one error) are saved to c:\
.PARAMETER DeprovisionedUser
This is an object of type Microsoft.ActiveDirectory.Management.ADUser.  This object can be generated from Get-UserForDeprovisioning
.PARAMETER WhatIf
Performs a non-destructive operation.  No users will be deleted. You will only see which users *would* have been deleted had you run it without this switch.
.EXAMPLE
delete-deprovisioneduser BloggsF, GreenD

The above command deletes the two users BloggsF and GreenD from Active Directory.

.EXAMPLE
'BloggsF','GreenD' | delete-deprovisioneduser

The above command deletes the two users BloggsF and GreenD from Active Directory.

.EXAMPLE
Get-UserForDeProvisioning -UserType Staff -DaysExpired 360 | select -first 5 | delete-deprovisioneduser -WhatIf

The above command will perform a "whatif" operation on the first 5 accounts received in the pipeline from 'Get-UserForDeProvisioning'.  No actual deletions will take place.
.EXAMPLE
Get-UserForDeProvisioning -UserType Staff -DaysExpired 360 | select -first 5 | delete-deprovisioneduser

The above command will delete the first 5 accounts received in the pipeline from 'Get-UserForDeProvisioning'.
.INPUTS
You can pipe the output of Get-UserForDeprovisioning to this function.
.OUTPUTS
None
.NOTES
Version: 1.2
Date: 13 May 2015
Created By: OH
.LINK
http://www.fearthemonkey.co.uk
.LINK
https://github.com/ozthe2/Powershell.git
.LINK
Get-UserForDeprovisioning
#>

Function Delete-DeprovisionedUser {

    [CmdletBinding()]
        
    Param(              
        [PARAMETER(Mandatory=$false,
        ValueFromPipeline=$True,ValueFromPipelineByPropertyName=$true)]
        [Alias("SamAccountName")]                        
        [string[]]$DeprovisionedUser,      
        

        [PARAMETER(Mandatory=$False)]
        [Switch]$WhatIf
        )

    BEGIN {
        #Initialise log files
        write-output "Start Processing: $(get-date)" | Out-File "c:\Delete-DeprovisionedUser.log" -Encoding ascii -Append
        write-output "Start Processing: $(get-date)" | Out-File "c:\Delete-DeprovisionedUser.err" -Encoding ascii -Append

        $ErrorCount = 0
        $UsersProcessed = 0
   
    }#End BEGIN

    PROCESS {
        foreach ($User in $DeprovisionedUser) {    

            if ($whatif) {    
                Try {                
                    remove-aduser -Identity $User -WhatIf -ea Stop
                    $UsersProcessed++                
                }Catch {
                    write-warning "Unable to delete $($User) from active directory."                
                }#end Try\Catch
            } else {
                #LIVE A.D DELETIONS!
                write-output "LIVE AD DELETIONS!"
                Try {
                    write-verbose "Deleting user: $($User.samaccountname)" 
                    remove-aduser -Identity $User.samaccountname -WhatIf -ea Stop
                    $usersprocessed++
                    $User.samaccountname  | Out-File "c:\Delete-DeprovisionedUser.log" -Append -Encoding ascii
                }Catch {
                    write-warning "Unable to delete $($User.samaccountname) from active directory."
                    $User.samaccountname  | Out-File "c:\Delete-DeprovisionedUser.err" -Append -Encoding ascii
                    $ErrorCount++
                }#end Try\Catch
            }#End else
       }#end foreach

    }#end PROCESS

    END {
        #Update log files        
        write-output "$UsersProcessed users deleted from Active Directory" | Out-File "c:\Delete-DeprovisionedUser.log" -Encoding ascii -Append
        write-output "Finished Processing: $(get-date)" | Out-File "c:\Delete-DeprovisionedUser.log" -Encoding ascii -Append
        write-output "" | Out-File "c:\Delete-DeprovisionedUser.log" -Encoding ascii -Append
        
        if ($ErrorCount -eq 0) {write-output "No reported errors." | Out-File "c:\Delete-DeprovisionedUser.err" -Encoding ascii -Append}
        write-output "Finished Processing: $(get-date)" | Out-File "c:\Delete-DeprovisionedUser.err" -Encoding ascii -Append
        write-output "" | Out-File "c:\Delete-DeprovisionedUser.err" -Encoding ascii -Append
    }

}#end function
