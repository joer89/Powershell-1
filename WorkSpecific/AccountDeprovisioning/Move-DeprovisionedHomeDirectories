<#
.Synopsis
Deletes user accounts from Active Directory
.DESCRIPTION
Receives input piped from Get-UserForDeprovisioning and deletes the Active Directory accounts received in the pipeline.
Two log files are created. (one success and one error) are saved to c:\
.PARAMETER DeprovisionedUser
The SamAccountName of a user.
.PARAMETER WhatIf
Performs a non-destructive operation.  No directories will be moved. You will only see which directories *would* have been moved had you run it without this switch.
.EXAMPLE
Move-DeprovisionedHomeDirectories 'BloggsF','GreenD'

The above command moves the home directories for two users BloggsF and GreenD from their current location to the new destination.
.EXAMPLE
Get-Content "c:\SamAccountNames.txt" | Move-DeprovisionedHomeDirectories -whatif

The above command performs a 'WhatIf' operation in trying to move the directories of users that are listed in c:\SamAccountNames.txt.  No actual directories are moved in this instance due to the -whatif switch at the end.
.EXAMPLE
Get-UserForDeProvisioning -UserType Staff -DaysExpired 360 | select -first 5 | remove-deprovisioneduser | Move-DeprovisionedHomeDirectories

The above command will first gets users that can be deprovisioned, then selects the first 5 from this list, then the user accounts are deleted from Active directory and finally their Home Directories are moved.
This is predominantly how we use this function here.
.INPUTS
You can pipe to this function
.OUTPUTS
None
.NOTES
Version: 1.0
Date: 14 May 2015
Created By: OH
.LINK
Get-UserForDeprovisioning
.LINK
Remove-DeprovisionedUser
.LINK
Get-FilesNotAccessed
.LINK
http://www.fearthemonkey.co.uk
.LINK
https://github.com/ozthe2/Powershell.git
#>
Function Move-DeprovisionedHomeDirectories {


    [CmdletBinding()]
        
    Param(              
        [PARAMETER(Mandatory=$false,
        ValueFromPipeline=$True,ValueFromPipelineByPropertyName=$true)]
        [Alias("SamAccountName")]                        
        [string[]]$DeprovisionedUser,  

        [PARAMETER(Mandatory=$False)]
        [Switch]$WhatIf
        )


    BEGIN {
        #Initialise log files
        write-output "Start Processing: $(get-date)" | Out-File "c:\Move-DeprovisionedHomeDirectories.log" -Encoding ascii -Append
        write-output "Start Processing: $(get-date)" | Out-File "c:\Move-DeprovisionedHomeDirectories.err" -Encoding ascii -Append        
        $ErrorCount = 0
        $DirectoriesProcessed = 0        
    }#End BEGIN

    PROCESS {    
        foreach ($User in $DeprovisionedUser) {
            #Determine if account is staff or student based on length of username.
            #All staff usernames are 8 chars or less, all student usernames ar 9 chars or more.
            if ($user.length -ge 9) {
                #Student account
                $SourcePath = "\\server\path\students"
                $DestinationPath = "\\server\path\todelete"

            } else {
                #Staff Account
                $SourcePath = "\\server\path\Staff"
                $DestinationPath = "\\server\path\todelete"
            }
          
            if ($whatif) {                   
                Try {                    
                    move-item "$SourcePath\$user" $DestinationPath -WhatIf -ea Stop
                    $DirectoriesProcessed++
                    "$SourcePath\$User" | Out-File "c:\Move-DeprovisionedHomeDirectories.log" -Append -Encoding ascii              
                }catch {
                    Write-warning "Unable to move directory: $($sourcepath)\$user"
                    "$SourcePath\$User" | Out-File "c:\Move-DeprovisionedHomeDirectories.err" -Append -Encoding ascii
                    $ErrorCount++                                                     
                }#end catch
            }else {
                #MOVE THE DIRECTORIES!                
                Try {
                    write-verbose "MOVING DIRECTORIES"
                    move-item "$SourcePath\$user" $DestinationPath -ea Stop
                    $DirectoriesProcessed++                    
                    "$SourcePath\$User moved to $DestinationPath"  | Out-File "c:\Move-DeprovisionedHomeDirectories.log" -Append -Encoding ascii
                }Catch {
                    write-warning "Unable to move: $SourcePath\$User"
                    "$SourcePath\$User" | Out-File "c:\Move-DeprovisionedHomeDirectories.err" -Append -Encoding ascii
                    $ErrorCount++
                }#end Try\Catch
            }#End else
        }#end Foreach
    }#end PROCESS

    END {
     #Update log files  
        if ($whatif) {write-output "MODE: WhatIf. No directories have been moved. (Would have moved $DirectoriesProcessed)" | Out-File "c:\Move-DeprovisionedHomeDirectories.log" -Encoding ascii -Append}
        
        if ($ErrorCount -eq 0) {            
            write-output "Finished Processing $DirectoriesProcessed directories. No reported errors." | Out-File "c:\Move-DeprovisionedHomeDirectories.err" -Encoding ascii -Append
        } else {
            write-output "Finished Processing: $ErrorCount errors encountered." | Out-File "c:\Move-DeprovisionedHomeDirectories.err" -Encoding ascii -Append
        }

        "End Processing: $(get-date)" | Out-File "c:\Move-DeprovisionedHomeDirectories.err" -Encoding ascii -Append
        "End Processing: $(get-date)" | Out-File "c:\Move-DeprovisionedHomeDirectories.log" -Encoding ascii -Append
        write-output "" | Out-File "c:\Move-DeprovisionedHomeDirectories.err" -Encoding ascii -Append    
        write-output "" | Out-File "c:\Move-DeprovisionedHomeDirectories.log" -Encoding ascii -Append    
    }#End END
}#End Function
